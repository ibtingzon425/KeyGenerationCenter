---------------------------
Key Generation Center (KGC)
---------------------------

#Starting the KGC server# 
-------------------------
SSLServer server = new SSLServer(PORTNO, KEYSTOREFILE, KEYSTOREPWD);
server_thread = new Thread(server, "Server");
server_thread.start();

#KEY GENERATION#
----------------
MODE values: 0 for Piratte, 1 for Bethen
 
private final String PUBKEY = "pub_key";
private final String MASTERKEY = "master_key";

KeyGen keygen = new KeyGen(MODE, PUBKEY, MASTERKEY);

#Public_Key and Master_Key Generation#
--------------------------------------
Note: This should be done when initializing the server, and should be done only ONCE.
The public key and master key are saved to the project's local directory. 

keygen.setProxy(HOST, PORT, KEYSTORE, KEYSTOREPWD);
keygen.generatePubKeys();

#Secret_Key Generation#
-----------------------
keygen.generateSecretKeyBethen(USERID, ATTRIBUTE_ARRAY);

#Remove Secret_Key#
-------------------
keygen.remove(USERID);

-----------------
Key Manager (KM)
-----------------

#Initialize client#
-------------------
SSLKGCClient client = new SSLKGCClient(HOST, PORT, KEYSTOREFILE, KEYSTOREPWD);

#Fetch pub, master, secret keys from KGC server#
--------------------------------------------
client.fetchKeys(USERID, ATTRIBUTES);

#UPLOADING (& ENCRYPTING), DOWNLOADING (& DECRYPTING) in AWS#
------------------------------------------------------
AWSAPI awsapi = new AWSAPI(USERID, ACCESSKEYID, SECRETACCESSKEY);
awsapi.setProxy(String PROXYHOST, int PROXYPORT, String PUBKEY, String PWD)
awsapi.upload(FILENAME, POLICY, BUCKETNAME);
awsapi.download(FILENAME, BUCKET, FILE_DESTINATION_PATH);
List<String> getBucketList(); #lists available buckets
 List<String> listFiles(String bucketname) #Lists the file in the bucket


